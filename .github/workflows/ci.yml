name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - uses: Gr1N/setup-poetry@v8
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: poetry install
    - name: Test with pytest
      run: poetry run pytest --cov ats --cov-report=xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3

  pipetester:
    name: PipeTester
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - uses: Gr1N/setup-poetry@v8
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: poetry install

    - name: Compile .py to .exe
      run: poetry run python -m nuitka --onefile --assume-yes-for-downloads --output-dir=build main.py

    - name: Test run compiled .exe file to make sure it works
      run: ./build/main.exe --print-test-tree

    - name: Upload .exe artifact
      uses: actions/upload-artifact@v3
      with:
        name: ats-project.exe
        path: build/main.exe

    - name: Download PipeTester
      uses: suisei-cn/actions-download-file@v1.3.0
      id: pipetester
      with:
        url: ${{ secrets.PIPE_TESTER_DOWNLOAD_URL }}
        target: tests/pipe_tester/

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - uses: pre-commit/action@v3.0.0
